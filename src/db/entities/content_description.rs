//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

use crate::db::DbUuid;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "content_description")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: DbUuid,
    #[sea_orm(column_type = "Text")]
    pub description: String,
    pub datetime_created: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::special_content::Entity")]
    SpecialContent,
    #[sea_orm(has_many = "super::text_content::Entity")]
    TextContent,
}

impl Related<super::special_content::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SpecialContent.def()
    }
}

impl Related<super::text_content::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TextContent.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
